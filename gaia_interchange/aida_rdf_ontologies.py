from rdflib import URIRef
from rdflib.namespace import ClosedNamespace

# these could be changed to darpa.mil if the interchange format is adopted program-wide
# TODO: temporarily extend these to include all ColdStart entity types - #2
# TODO: long-term, we need to make the program ontology configurable

AIDA_PROGRAM_ONTOLOGY = ClosedNamespace(
    uri=URIRef("http://www.isi.edu/aida/programOntology#"),
    terms=["Person", "Organization", "Location", "Facility", "GeopoliticalEntity", "String",
           # realis types
           "Actual", "Generic", "Other",
           # relation types
           "conflict.attack", "conflict.demonstrate",
           "contact.broadcast", "contact.contact", "contact.correspondence", "contact.meet",
           "justice.arrest-jail", "life.die", "life.injure", "manufacture.artifact",
           "movement.transport-artifact", "movement.transport-person", "personnel.elect",
           "personnel.end-position", "personnel.start-position", "transaction.transaction",
           "transaction.transfer-money", "transaction.transfer-ownership", "children",
           "parents", "other_family", "parents", "children", "siblings", "spouse",
           "employee_or_member_of", "employees_or_members", "schools_attended", "students",
           "city_of_birth", "births_in_city", "stateorprovince_of_birth",
           "births_in_stateorprovince", "country_of_birth", "births_in_country",
           "cities_of_residence", "residents_of_city",
           "statesorprovinces_of_residence", "residents_of_stateorprovince",
           "countries_of_residence", "residents_of_country",
           "city_of_death", "deaths_in_city",
           "stateorprovince_of_death", "deaths_in_stateorprovince",
           "country_of_death", "deaths_in_country",
           "shareholders", "holds_shares_in",
           "founded_by", "organizations_founded",
           "top_members_employees", "top_member_employee_of",
           "members", "member_of", "subsidiaries",
           "city_of_headquarters", "headquarters_in_city",
           "stateorprovince_of_headquarters", "headquarters_in_stateorprovince",
           "country_of_headquarters", "headquarters_in_country",
           "alternate_names", "alternate_names", "date_of_birth",
           "political_religious_affiliation", "age", "number_of_employees_members",
           "origin", "date_founded", "date_of_death", "date_dissolved",
           "cause_of_death", "website", "title", "religion", "charges"])

AIDA_PROGRAM_ONTOLOGY_LUT = {
    "PER": AIDA_PROGRAM_ONTOLOGY.Person, "ORG": AIDA_PROGRAM_ONTOLOGY.Organization,
    "GPE": AIDA_PROGRAM_ONTOLOGY.GeopoliticalEntity, "LOC": AIDA_PROGRAM_ONTOLOGY.Location,
    "FAC": AIDA_PROGRAM_ONTOLOGY.Facility, "STRING": AIDA_PROGRAM_ONTOLOGY.String,
    "String": AIDA_PROGRAM_ONTOLOGY.String,
    # relations
    "age": AIDA_PROGRAM_ONTOLOGY.age,
    "alternate_names": AIDA_PROGRAM_ONTOLOGY.alternate_names,
    "births_in_city": AIDA_PROGRAM_ONTOLOGY.births_in_city,
    "births_in_country": AIDA_PROGRAM_ONTOLOGY.births_in_country,
    "births_in_stateorprovince": AIDA_PROGRAM_ONTOLOGY.births_in_stateorprovince,
    "cause_of_death": AIDA_PROGRAM_ONTOLOGY.cause_of_death,
    "charges": AIDA_PROGRAM_ONTOLOGY.charges,
    "children": AIDA_PROGRAM_ONTOLOGY.children,
    "cities_of_residence": AIDA_PROGRAM_ONTOLOGY.cities_of_residence,
    "city_of_birth": AIDA_PROGRAM_ONTOLOGY.city_of_birth,
    "city_of_death": AIDA_PROGRAM_ONTOLOGY.city_of_death,
    "city_of_headquarters": AIDA_PROGRAM_ONTOLOGY.city_of_headquarters,
    "CONFLICT.ATTACK": AIDA_PROGRAM_ONTOLOGY['conflict.attack'],
    "CONFLICT.DEMONSTRATE": AIDA_PROGRAM_ONTOLOGY['conflict.demonstrate'],
    "CONTACT.BROADCAST": AIDA_PROGRAM_ONTOLOGY['contact.broadcast'],
    "CONTACT.CONTACT": AIDA_PROGRAM_ONTOLOGY['contact.contact'],
    "CONTACT.CORRESPONDENCE": AIDA_PROGRAM_ONTOLOGY['contact.correspondence'],
    "CONTACT.MEET": AIDA_PROGRAM_ONTOLOGY['contact.meet'],
    "countries_of_residence": AIDA_PROGRAM_ONTOLOGY.countries_of_residence,
    "country_of_birth": AIDA_PROGRAM_ONTOLOGY.country_of_birth,
    "country_of_death": AIDA_PROGRAM_ONTOLOGY.country_of_death,
    "country_of_headquarters": AIDA_PROGRAM_ONTOLOGY.country_of_headquarters,
    "date_dissolved": AIDA_PROGRAM_ONTOLOGY.date_dissolved,
    "date_founded": AIDA_PROGRAM_ONTOLOGY.date_founded,
    "date_of_birth": AIDA_PROGRAM_ONTOLOGY.date_of_birth,
    "date_of_death": AIDA_PROGRAM_ONTOLOGY.date_of_death,
    "deaths_in_city": AIDA_PROGRAM_ONTOLOGY.deaths_in_city,
    "deaths_in_country": AIDA_PROGRAM_ONTOLOGY.deaths_in_country,
    "deaths_in_stateorprovince": AIDA_PROGRAM_ONTOLOGY.deaths_in_stateorprovince,
    "employee_or_member_of": AIDA_PROGRAM_ONTOLOGY.employee_or_member_of,
    "employees_or_members": AIDA_PROGRAM_ONTOLOGY.employees_or_members,
    "founded_by": AIDA_PROGRAM_ONTOLOGY.founded_by,
    "headquarters_in_city": AIDA_PROGRAM_ONTOLOGY.headquarters_in_city,
    "headquarters_in_country": AIDA_PROGRAM_ONTOLOGY.headquarters_in_country,
    "headquarters_in_stateorprovince": AIDA_PROGRAM_ONTOLOGY.headquarters_in_stateorprovince,
    "holds_shares_in": AIDA_PROGRAM_ONTOLOGY.holds_shares_in,
    "JUSTICE.ARREST-JAIL": AIDA_PROGRAM_ONTOLOGY['justice.arrest-jail'],
    "LIFE.DIE": AIDA_PROGRAM_ONTOLOGY['life.die'],
    "LIFE.INJURE": AIDA_PROGRAM_ONTOLOGY['life.injure'],
    "MANUFACTURE.ARTIFACT": AIDA_PROGRAM_ONTOLOGY['manufacture.artifact'],
    "member_of": AIDA_PROGRAM_ONTOLOGY.member_of,
    "members": AIDA_PROGRAM_ONTOLOGY.members,
    "MOVEMENT.TRANSPORT-ARTIFACT": AIDA_PROGRAM_ONTOLOGY['movement.transport-artifact'],
    "MOVEMENT.TRANSPORT-PERSON": AIDA_PROGRAM_ONTOLOGY['movement.transport-person'],
    "number_of_employees_members": AIDA_PROGRAM_ONTOLOGY.number_of_employees_members,
    "organizations_founded": AIDA_PROGRAM_ONTOLOGY.organizations_founded,
    "origin": AIDA_PROGRAM_ONTOLOGY.origin,
    "other_family": AIDA_PROGRAM_ONTOLOGY.other_family,
    "parents": AIDA_PROGRAM_ONTOLOGY.parents,
    "PERSONNEL.ELECT": AIDA_PROGRAM_ONTOLOGY['personnel.elect'],
    "PERSONNEL.END-POSITION": AIDA_PROGRAM_ONTOLOGY['personnel.end-position'],
    "PERSONNEL.START-POSITION": AIDA_PROGRAM_ONTOLOGY['personnel.start-position'],
    "political_religious_affiliation": AIDA_PROGRAM_ONTOLOGY.political_religious_affiliation,
    "religion": AIDA_PROGRAM_ONTOLOGY.religion,
    "residents_of_city": AIDA_PROGRAM_ONTOLOGY.residents_of_city,
    "residents_of_country": AIDA_PROGRAM_ONTOLOGY.residents_of_country,
    "residents_of_stateorprovince": AIDA_PROGRAM_ONTOLOGY.residents_of_stateorprovince,
    "schools_attended": AIDA_PROGRAM_ONTOLOGY.schools_attended,
    "shareholders": AIDA_PROGRAM_ONTOLOGY.shareholders,
    "siblings": AIDA_PROGRAM_ONTOLOGY.siblings,
    "spouse": AIDA_PROGRAM_ONTOLOGY.spouse,
    "stateorprovince_of_birth": AIDA_PROGRAM_ONTOLOGY.stateorprovince_of_birth,
    "stateorprovince_of_death": AIDA_PROGRAM_ONTOLOGY.stateorprovince_of_death,
    "stateorprovince_of_headquarters": AIDA_PROGRAM_ONTOLOGY.stateorprovince_of_headquarters,
    "statesorprovinces_of_residence": AIDA_PROGRAM_ONTOLOGY.statesorprovinces_of_residence,
    "students": AIDA_PROGRAM_ONTOLOGY.students,
    "subsidiaries": AIDA_PROGRAM_ONTOLOGY.subsidiaries,
    "title": AIDA_PROGRAM_ONTOLOGY.title,
    "top_member_employee_of": AIDA_PROGRAM_ONTOLOGY.top_member_employee_of,
    "top_members_employees": AIDA_PROGRAM_ONTOLOGY.top_members_employees,
    "TRANSACTION.TRANSACTION": AIDA_PROGRAM_ONTOLOGY['transaction.transaction'],
    "TRANSACTION.TRANSFER-MONEY": AIDA_PROGRAM_ONTOLOGY['transaction.transfer-money'],
    "TRANSACTION.TRANSFER-OWNERSHIP": AIDA_PROGRAM_ONTOLOGY['transaction.transfer-ownership'],
    "website": AIDA_PROGRAM_ONTOLOGY.website}

AIDA_ANNOTATION = ClosedNamespace(
    uri=URIRef("http://www.isi.edu/aida/interchangeOntology#"),
    terms=[
      # Classes,
      'Confidence',
      'Entity',
      'System',
      'TextJustification',
      # Properties
      'confidence',
      'confidenceValue',
      'endOffsetInclusive',
      'justifiedBy',
      'source',
      'startOffset',
      'system'])
